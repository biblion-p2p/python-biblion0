Each layer builds off the last

Layer 1 - Shelf
- Distributed quasi-byzantine-resistant database
- Updated and managed by a leader
- A set of documents,
- And a huge record of what documents exist
- "Indexing" is entirely optional and custom
- S/Kademlia DHT
  - Coral?? Referenced in IPFS paper
- Bittorrent style downloading
- Automatic deduping
- Content based addressing (by SHA256 hash)
  - Large files further broken up into piecesets
  - First download a pieceset description (analogous to a .torrent file)
  - Then request the individual pieces to build the whole data file
  - (Can request only certain pieces if whole file isn't desired)
- Versioning
- Changelog

Layer 2 - Lynx

- Membership applications
- Submit edit requests
- A "balance book" tracked by the system to reward users who do well
- Tranfers from one user to another require balancing the books. This can be
done in a distributed way
- Clients must provide proof of storage to show they are indeed transferring
the pieces they claim
- Library owner can "create" and destroy funds as needed. Running a fiat currency.
- Owner can manipulate balances, so must be trusted!

Layer 3 - Biblion

- PoW blockchain
- et-hash? Maybe scrypt with different parameters
- Auto-adjusting difficulty
- Records:
  - Verified transactions (Including those involving Lynx tokens)
  - Library ownership
  - Records of data/changes existence/ownership
    - This can be used to prevent cheating
- DHT
  - Can be secured with Hashcash if needed
- Manual DHT can be updated in Blockchain



Future work
----
Connect with an existing blockchain
Perhaps become a storage backend as part of SWARM (etheruem)
With community dynamics enforced by Lynx smart contracts




Example goal: A decentralized Steam platform
Run by the community or a cabal of game developers
But hosted by anyone willing to help

- Store games encrypted
- Then buy per-game decryption key from the store (in Biblion or any currency)
- Then decrypt it locally
